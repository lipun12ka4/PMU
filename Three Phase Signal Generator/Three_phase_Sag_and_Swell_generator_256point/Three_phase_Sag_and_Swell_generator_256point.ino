#include <JeeLib.h>
#include <avr/pgmspace.h>
#include <TimerOne.h>

//byte index;
int i=0;

byte sineR256[] PROGMEM = {100,102,105,107,110,112,115,117,120,122,124,127,129,131,134,136,138,141,143,145,147,149,151,153,156,158,160,162,163,165,167,169,171,172,174,176,177,179,180,182,183,184,186,187,188,189,190,191,192,193,194,195,196,196,197,198,198,199,199,199,200,200,200,200,200,200,200,200,200,199,199,199,198,198,197,196,196,195,194,193,192,191,190,189,188,187,186,184,183,182,180,179,177,176,174,172,171,169,167,165,163,162,160,158,156,153,151,149,147,145,143,141,138,136,134,131,129,127,124,122,120,117,115,112,110,107,105,102,100,98,95,93,90,88,85,83,80,78,76,73,71,69,66,64,62,59,57,55,53,51,49,47,44,42,40,38,37,35,33,31,29,28,26,24,23,21,20,18,17,16,14,13,12,11,10,9,8,7,6,5,4,4,3,2,2,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,4,4,5,6,7,8,9,10,11,12,13,14,16,17,18,20,21,23,24,26,28,29,31,33,35,37,38,40,42,44,47,49,51,53,55,57,59,62,64,66,69,71,73,76,78,80,83,85,88,90,93,95,98};
byte sineY256[] PROGMEM = {199,199,199,198,198,197,196,196,195,194,193,192,191,190,189,188,187,186,184,183,182,180,179,177,176,174,172,171,169,167,165,163,162,160,158,156,153,151,149,147,145,143,141,138,136,134,131,129,127,124,122,120,117,115,112,110,107,105,102,100,98,95,93,90,88,85,83,80,78,76,73,71,69,66,64,62,59,57,55,53,51,49,47,44,42,40,38,37,35,33,31,29,28,26,24,23,21,20,18,17,16,14,13,12,11,10,9,8,7,6,5,4,4,3,2,2,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,4,4,5,6,7,8,9,10,11,12,13,14,16,17,18,20,21,23,24,26,28,29,31,33,35,37,38,40,42,44,47,49,51,53,55,57,59,62,64,66,69,71,73,76,78,80,83,85,88,90,93,95,98,100,102,105,107,110,112,115,117,120,122,124,127,129,131,134,136,138,141,143,145,147,149,151,153,156,158,160,162,163,165,167,169,171,172,174,176,177,179,180,182,183,184,186,187,188,189,190,191,192,193,194,195,196,196,197,198,198,199,199,199,200,200,200,200,200,200,200,200,200};
byte sineB256[] PROGMEM = {26,24,23,21,20,18,17,16,14,13,12,11,10,9,8,7,6,5,4,4,3,2,2,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,4,4,5,6,7,8,9,10,11,12,13,14,16,17,18,20,21,23,24,26,28,29,31,33,35,37,38,40,42,44,47,49,51,53,55,57,59,62,64,66,69,71,73,76,78,80,83,85,88,90,93,95,98,100,102,105,107,110,112,115,117,120,122,124,127,129,131,134,136,138,141,143,145,147,149,151,153,156,158,160,162,163,165,167,169,171,172,174,176,177,179,180,182,183,184,186,187,188,189,190,191,192,193,194,195,196,196,197,198,198,199,199,199,200,200,200,200,200,200,200,200,200,199,199,199,198,198,197,196,196,195,194,193,192,191,190,189,188,187,186,184,183,182,180,179,177,176,174,172,171,169,167,165,163,162,160,158,156,153,151,149,147,145,143,141,138,136,134,131,129,127,124,122,120,117,115,112,110,107,105,102,100,98,95,93,90,88,85,83,80,78,76,73,71,69,66,64,62,59,57,55,53,51,49,47,44,42,40,38,37,35,33,31,29,28};

byte SaggedsineR256[] PROGMEM = {85,86,89,90,93,95,97,99,102,103,105,107,109,111,113,115,117,119,121,123,124,126,128,130,132,134,136,137,138,140,141,143,145,146,147,149,150,152,153,154,155,156,158,158,159,160,161,162,163,164,164,165,166,166,167,168,168,169,169,169,170,170,170,170,170,170,170,170,170,169,169,169,168,168,167,166,166,165,164,164,163,162,161,160,159,158,158,156,155,154,153,152,150,149,147,146,145,143,141,140,138,137,136,134,132,130,128,126,124,123,121,119,117,115,113,111,109,107,105,103,102,99,97,95,93,90,89,86,85,83,80,79,76,74,72,70,68,66,64,62,60,58,56,54,52,50,48,46,45,43,41,39,37,35,34,32,31,29,28,26,24,23,22,20,19,17,17,15,14,13,11,11,10,9,8,7,6,5,5,4,3,3,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,3,3,4,5,5,6,7,8,9,10,11,11,13,14,15,17,17,19,20,22,23,24,26,28,29,31,32,34,35,37,39,41,43,45,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,79,80,83};
byte SaggedsineY256[] PROGMEM = {169,169,169,168,168,167,166,166,165,164,164,163,162,161,160,159,158,158,156,155,154,153,152,150,149,147,146,145,143,141,140,138,137,136,134,132,130,128,126,124,123,121,119,117,115,113,111,109,107,105,103,102,99,97,95,93,90,89,86,85,83,80,79,76,74,72,70,68,66,64,62,60,58,56,54,52,50,48,46,45,43,41,39,37,35,34,32,31,29,28,26,24,23,22,20,19,17,17,15,14,13,11,11,10,9,8,7,6,5,5,4,3,3,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,3,3,4,5,5,6,7,8,9,10,11,11,13,14,15,17,17,19,20,22,23,24,26,28,29,31,32,34,35,37,39,41,43,45,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,79,80,83,85,86,89,90,93,95,97,99,102,103,105,107,109,111,113,115,117,119,121,123,124,126,128,130,132,134,136,137,138,140,141,143,145,146,147,149,150,152,153,154,155,156,158,158,159,160,161,162,163,164,164,165,166,166,167,168,168,169,169,169,170,170,170,170,170,170,170,170,170};
byte SaggedsineB256[] PROGMEM = {22,20,19,17,17,15,14,13,11,11,10,9,8,7,6,5,5,4,3,3,2,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,3,3,4,5,5,6,7,8,9,10,11,11,13,14,15,17,17,19,20,22,23,24,26,28,29,31,32,34,35,37,39,41,43,45,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,79,80,83,85,86,89,90,93,95,97,99,102,103,105,107,109,111,113,115,117,119,121,123,124,126,128,130,132,134,136,137,138,140,141,143,145,146,147,149,150,152,153,154,155,156,158,158,159,160,161,162,163,164,164,165,166,166,167,168,168,169,169,169,170,170,170,170,170,170,170,170,170,169,169,169,168,168,167,166,166,165,164,164,163,162,161,160,159,158,158,156,155,154,153,152,150,149,147,146,145,143,141,140,138,137,136,134,132,130,128,126,124,123,121,119,117,115,113,111,109,107,105,103,102,99,97,95,93,90,89,86,85,83,80,79,76,74,72,70,68,66,64,62,60,58,56,54,52,50,48,46,45,43,41,39,37,35,34,32,31,29,28,26,24,23};

byte SwelledsineR256[] PROGMEM = {115,117,120,123,126,128,132,134,138,140,142,146,148,150,154,156,158,162,164,166,169,171,173,175,179,181,184,186,187,189,192,194,196,197,200,202,203,205,207,209,210,211,213,215,216,217,218,219,220,221,223,224,225,225,226,227,227,228,228,228,230,230,230,230,230,230,230,230,230,228,228,228,227,227,226,225,225,224,223,221,220,219,218,217,216,215,213,211,210,209,207,205,203,202,200,197,196,194,192,189,187,186,184,181,179,175,173,171,169,166,164,162,158,156,154,150,148,146,142,140,138,134,132,128,126,123,120,117,115,112,109,106,103,101,97,95,92,89,87,83,81,79,75,73,71,67,65,63,60,58,56,54,50,48,46,43,42,40,37,35,33,32,29,27,26,24,23,20,19,18,16,14,13,12,11,10,9,8,6,5,4,4,3,2,2,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,4,4,5,6,8,9,10,11,12,13,14,16,18,19,20,23,24,26,27,29,32,33,35,37,40,42,43,46,48,50,54,56,58,60,63,65,67,71,73,75,79,81,83,87,89,92,95,97,101,103,106,109,112};
byte SwelledsineY256[] PROGMEM = {228,228,228,227,227,226,225,225,224,223,221,220,219,218,217,216,215,213,211,210,209,207,205,203,202,200,197,196,194,192,189,187,186,184,181,179,175,173,171,169,166,164,162,158,156,154,150,148,146,142,140,138,134,132,128,126,123,120,117,115,112,109,106,103,101,97,95,92,89,87,83,81,79,75,73,71,67,65,63,60,58,56,54,50,48,46,43,42,40,37,35,33,32,29,27,26,24,23,20,19,18,16,14,13,12,11,10,9,8,6,5,4,4,3,2,2,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,4,4,5,6,8,9,10,11,12,13,14,16,18,19,20,23,24,26,27,29,32,33,35,37,40,42,43,46,48,50,54,56,58,60,63,65,67,71,73,75,79,81,83,87,89,92,95,97,101,103,106,109,112,115,117,120,123,126,128,132,134,138,140,142,146,148,150,154,156,158,162,164,166,169,171,173,175,179,181,184,186,187,189,192,194,196,197,200,202,203,205,207,209,210,211,213,215,216,217,218,219,220,221,223,224,225,225,226,227,227,228,228,228,230,230,230,230,230,230,230,230,230};
byte SwelledsineB256[] PROGMEM = {29,27,26,24,23,20,19,18,16,14,13,12,11,10,9,8,6,5,4,4,3,2,2,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,2,2,3,4,4,5,6,8,9,10,11,12,13,14,16,18,19,20,23,24,26,27,29,32,33,35,37,40,42,43,46,48,50,54,56,58,60,63,65,67,71,73,75,79,81,83,87,89,92,95,97,101,103,106,109,112,115,117,120,123,126,128,132,134,138,140,142,146,148,150,154,156,158,162,164,166,169,171,173,175,179,181,184,186,187,189,192,194,196,197,200,202,203,205,207,209,210,211,213,215,216,217,218,219,220,221,223,224,225,225,226,227,227,228,228,228,230,230,230,230,230,230,230,230,230,228,228,228,227,227,226,225,225,224,223,221,220,219,218,217,216,215,213,211,210,209,207,205,203,202,200,197,196,194,192,189,187,186,184,181,179,175,173,171,169,166,164,162,158,156,154,150,148,146,142,140,138,134,132,128,126,123,120,117,115,112,109,106,103,101,97,95,92,89,87,83,81,79,75,73,71,67,65,63,60,58,56,54,50,48,46,43,42,40,37,35,33,32};

int interval=77;

void setup () {
  Serial.begin(115200);
  for(int i=22;i<50;i++)//Define Port A,C and L as Output
  {
    pinMode(i,OUTPUT);
  }
  print_tables();
}
void print_tables(){
  
  Serial.println("Red Phase   "); 
  for (int i=0;i<256;i++) {

    Serial.print(pgm_read_byte(sineR256 + i));//Red Phase
    Serial.print(",");
  }
  Serial.println();
  Serial.println("Yellow Phase ");
  for (int i=0;i<256;i++) {        

    Serial.print(pgm_read_byte(sineY256 + i));//Red Phase
    Serial.print(",");
  }
  Serial.println();
  Serial.println("Blue Phase  ");
  for (int i=0;i<256;i++) {

    Serial.print(pgm_read_byte(sineB256 + i));//Red Phase
    Serial.print(",");
  }
  Serial.println();
  Serial.println();
  
  Serial.println("Sagged Red Phase   "); 
  for (int i=0;i<256;i++) {

    Serial.print(int(pgm_read_byte(sineR256 + i)*.85));//Red Phase
    Serial.print(",");
  }
  Serial.println();
  Serial.println("Sagged Yellow Phase ");
  for (int i=0;i<256;i++) {        

    Serial.print(int(pgm_read_byte(sineY256 + i)*.85));//Red Phase
    Serial.print(",");
  }
  Serial.println();
  Serial.println("Sagged Blue Phase  ");
  for (int i=0;i<256;i++) {

    Serial.print(int(pgm_read_byte(sineB256 + i)*.85));//Red Phase
    Serial.print(",");
  }
  Serial.println();
  Serial.println();
  
    Serial.println("Swelled Red Phase   "); 
  for (int i=0;i<256;i++) {

    Serial.print(int(pgm_read_byte(sineR256 + i)*1.15));//Red Phase
    Serial.print(",");
  }
  Serial.println();
  Serial.println("Swelled Yellow Phase ");
  for (int i=0;i<256;i++) {        

    Serial.print(int(pgm_read_byte(sineY256 + i)*1.15));//Red Phase
    Serial.print(",");
  }
  Serial.println();
  Serial.println("Swelled Blue Phase  ");
  for (int i=0;i<256;i++) {

    Serial.print(int(pgm_read_byte(sineB256 + i)*1.15));//Red Phase
    Serial.print(",");
  }
  Serial.println();
  Serial.println();
}
void loop () {
//while(1);
for(int i=0;i<200;i++)
{
for (int i=0;i<256;i++) {

        PORTA = pgm_read_byte(sineR256 + i);//Red Phase
        PORTC = pgm_read_byte(sineY256 + i);//Blue Phase
        PORTL = pgm_read_byte(sineB256 + i);//Yellow Phase

        delayMicroseconds(interval);
        
    }
}
for(int i=0;i<10;i++)//Sagged
{
for (int i=0;i<256;i++) {

        PORTA = pgm_read_byte(SaggedsineR256 + i);//Red Phase
        PORTC = pgm_read_byte(SaggedsineY256 + i);//Blue Phase
        PORTL = pgm_read_byte(SaggedsineB256 + i);//Yellow Phase

        delayMicroseconds(interval);
        
    }
}
for(int i=0;i<100;i++)//Normal
{
for (int i=0;i<256;i++) {

        PORTA = pgm_read_byte(sineR256 + i);//Red Phase
        PORTC = pgm_read_byte(sineY256 + i);//Blue Phase
        PORTL = pgm_read_byte(sineB256 + i);//Yellow Phase

        delayMicroseconds(interval);
        
    }
}


for(int i=0;i<20;i++)//Swelled Signals
{
for (int i=0;i<256;i++) {

        PORTA = pgm_read_byte(SwelledsineR256 + i);//Red Phase
        PORTC = pgm_read_byte(SwelledsineY256 + i);//Blue Phase
        PORTL = pgm_read_byte(SwelledsineB256 + i);//Yellow Phase

        delayMicroseconds(interval);
        
    }
}


}









